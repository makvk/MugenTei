from aiogram import Router, types, F
from aiogram.types import ReplyKeyboardRemove, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.context import FSMContext
from handlers.common import Dialog, BUTTONS
from aiogram.filters.callback_data import CallbackData
from typing import Optional

router = Router()

PL_FIGURES = [
    "1. <b>–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫</b> ‚Äî <i>–í–µ—Ä—à–∏–Ω–∞ –§—É–¥–∑–∏</i>",
    "2. <b>–ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫</b> ‚Äî <i>–°–≤–∏—Ç–æ–∫ –º—É–¥—Ä–æ—Å—Ç–∏</i>",
    "3. <b>–ö–≤–∞–¥—Ä–∞—Ç</b> ‚Äî <i>–ü–µ—á–∞—Ç—å –∏–º–ø–µ—Ä–∞—Ç–æ—Ä–∞</i>",
    "4. <b>–ü–∞—Ä–∞–ª–ª–µ–ª–æ–≥—Ä–∞–º–º</b> ‚Äî <i>–ü–∞–¥–∞—é—â–∏–π –≤–æ–¥–æ–ø–∞–¥</i>",
    "5. <b>–†–æ–º–±</b> ‚Äî <i>–ö—Ä—ã–ª—å—è –∂—É—Ä–∞–≤–ª—è</i>",
    "6. <b>–¢—Ä–∞–ø–µ—Ü–∏—è</b> ‚Äî <i>–•—Ä–∞–º–æ–≤–∞—è –∫—Ä—ã—à–∞</i>",
    "7. <b>–ö—Ä—É–≥</b> ‚Äî <i>–õ—É–Ω–∞ –≤ –ø—Ä—É–¥—É</i>",
    "8. <b>–≠–ª–ª–∏–ø—Å</b> ‚Äî <i>–ì–ª–∞–∑ –ë—É–¥–¥—ã</i>",
    "9. <b>–°–µ–∫—Ç–æ—Ä –∫—Ä—É–≥–∞</b> ‚Äî <i>–í–µ–µ—Ä –≥–µ–π—à–∏</i>",
    "10. <b>–°–µ–≥–º–µ–Ω—Ç –∫—Ä—É–≥–∞</b> ‚Äî <i>–ú–æ—Å—Ç –≤ –æ–±–ª–∞–∫–∞—Ö</i>",
    "11. <b>–í—ã–ø—É–∫–ª—ã–π —á–µ—Ç—ã—Ä–µ—Ö—É–≥–æ–ª—å–Ω–∏–∫</b> ‚Äî <i>–ë–æ–µ–≤–æ–π —â–∏—Ç</i>",
    "12. <b>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–Ω–æ–≥–æ—É–≥–æ–ª—å–Ω–∏–∫</b> ‚Äî <i>–°–æ—Ç—ã –º—É–¥—Ä–µ—Ü–∞</i>"
]

ST_FIGURES = [
    "1. <b>–ö—É–±</b> ‚Äî <i>–°–æ–∫—Ä–æ–≤–∏—â–Ω–∏—Ü–∞ —Å–∞–º—É—Ä–∞—è</i>",
    "2. <b>–ü–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥</b> ‚Äî <i>–ö–∞–º–µ–Ω–Ω—ã–π –º–æ—Å—Ç</i>",  
    "3. <b>–ü—Ä–∏–∑–º–∞</b> ‚Äî <i>–•—Ä–∞–º–æ–≤–∞—è –∫–æ–ª–æ–Ω–Ω–∞</i>",
    "4. <b>–ü–∏—Ä–∞–º–∏–¥–∞</b> ‚Äî <i>–ü—É—Ç—å –∫ –ø—Ä–æ—Å–≤–µ—Ç–ª–µ–Ω–∏—é</i>",
    "5. <b>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–µ—Ç—Ä–∞—ç–¥—Ä</b> ‚Äî <i>–°–≤—è—â–µ–Ω–Ω–∞—è –≥–æ—Ä–∞</i>",
    
    "6. <b>–¶–∏–ª–∏–Ω–¥—Ä</b> ‚Äî <i>–ë–∞–º–±—É–∫–æ–≤—ã–π —Å–≤–∏—Ç–æ–∫</i>",
    "7. <b>–ö–æ–Ω—É—Å</b> ‚Äî <i>–®–ª—è–ø–∞ –º–æ–Ω–∞—Ö–∞</i>",
    "8. <b>–£—Å–µ—á—ë–Ω–Ω—ã–π –∫–æ–Ω—É—Å</b> ‚Äî <i>–ß–∞–π–Ω–∞—è —á–∞—à–∞</i>", 
    "9. <b>–®–∞—Ä</b> ‚Äî <i>–õ—É–Ω–Ω—ã–π —Å–≤–µ—Ç</i>",
    "10. <b>–®–∞—Ä–æ–≤–æ–π —Å–µ–≥–º–µ–Ω—Ç</b> ‚Äî <i>–†–∞–∫–æ–≤–∏–Ω–∞ –∂–µ–º—á—É–∂–∏–Ω—ã</i>",
    "11. <b>–®–∞—Ä–æ–≤–æ–π —Å–ª–æ–π</b> ‚Äî <i>–ö–æ–ª—å—Ü–æ –¥—Ä–∞–∫–æ–Ω–∞</i>",

    "12. <b>–≠–ª–ª–∏–ø—Å–æ–∏–¥</b> ‚Äî <i>–ì–ª–∞–∑ –≤—Å–µ–≤–∏–¥—è—â–µ–≥–æ</i>"
]

async def get_kb_0():
    keyboard = [
        [
            InlineKeyboardButton(text = "5", callback_data = "class5"),
            InlineKeyboardButton(text = "6", callback_data = "class6"),
            InlineKeyboardButton(text = "7", callback_data = "class7")
        ],
        [
            InlineKeyboardButton(text = "8", callback_data = "class8"),
            InlineKeyboardButton(text = "9", callback_data = "class9"),
            InlineKeyboardButton(text = "10", callback_data = "class10")
        ],
        [
            InlineKeyboardButton(text = "11", callback_data = "class11"),
            InlineKeyboardButton(text = "–û–ì–≠", callback_data = "classEX9"),
            InlineKeyboardButton(text = "–ï–ì–≠", callback_data = "classEX11")
        ],
        [
            InlineKeyboardButton(text = "–ú–µ–Ω—é", callback_data = "main_menu"),
        ]
    ]
    return keyboard

async def get_kb_10():
    keyboard = [
        [
            InlineKeyboardButton(text = "–ü–ª–∞–Ω–∏–º–µ—Ç—Ä–∏—è", callback_data = "formulas_pl"),
            InlineKeyboardButton(text = "–°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è", callback_data = "formulas_st")
        ],
        [
            InlineKeyboardButton(text = "–ú–µ–Ω—é", callback_data = "main_menu"),
        ]
    ]
    return keyboard

async def get_kb_100():
    keyboard = [
        [
            InlineKeyboardButton(text = "1", callback_data = "fig_pl_1"),
            InlineKeyboardButton(text = "2", callback_data = "fig_pl_2"),
            InlineKeyboardButton(text = "3", callback_data = "fig_pl_3"),
        ],
        [
            InlineKeyboardButton(text = "4", callback_data = "fig_pl_4"),
            InlineKeyboardButton(text = "5", callback_data = "fig_pl_5"),
            InlineKeyboardButton(text = "6", callback_data = "fig_pl_6"),
        ],
        [
            InlineKeyboardButton(text = "7", callback_data = "fig_pl_7"),
            InlineKeyboardButton(text = "8", callback_data = "fig_pl_8"),
            InlineKeyboardButton(text = "9", callback_data = "fig_pl_9"),
        ],
        [
            InlineKeyboardButton(text = "10", callback_data = "fig_pl_10"),
            InlineKeyboardButton(text = "11", callback_data = "fig_pl_11"),
            InlineKeyboardButton(text = "12", callback_data = "fig_pl_12"),
        ],
        [
            InlineKeyboardButton(text = "–ú–µ–Ω—é", callback_data = "main_menu"),
            InlineKeyboardButton(text = "–ù–∞–∑–∞–¥", callback_data = "formulas_back"),
        ]
    ]
    return keyboard

async def get_kb_101():
    keyboard = [
        [
            InlineKeyboardButton(text = "1", callback_data = "fig_st_1"),
            InlineKeyboardButton(text = "2", callback_data = "fig_st_2"),
            InlineKeyboardButton(text = "3", callback_data = "fig_st_3"),
        ],
        [
            InlineKeyboardButton(text = "4", callback_data = "fig_st_4"),
            InlineKeyboardButton(text = "5", callback_data = "fig_st_5"),
            InlineKeyboardButton(text = "6", callback_data = "fig_st_6"),
        ],
        [
            InlineKeyboardButton(text = "7", callback_data = "fig_st_7"),
            InlineKeyboardButton(text = "8", callback_data = "fig_st_8"),
            InlineKeyboardButton(text = "9", callback_data = "fig_st_9"),
        ],
        [
            InlineKeyboardButton(text = "10", callback_data = "fig_st_10"),
            InlineKeyboardButton(text = "11", callback_data = "fig_st_11"),
            InlineKeyboardButton(text = "12", callback_data = "fig_st_12"),
        ],
        [
            InlineKeyboardButton(text = "–ú–µ–Ω—é", callback_data = "main_menu"),
            InlineKeyboardButton(text = "–ù–∞–∑–∞–¥", callback_data = "formulas_back"),
        ]
    ]
    return keyboard

@router.message(Dialog.waiting_for_choice, F.text.in_(BUTTONS))
async def get_choice(message: types.Message, state: FSMContext):
    await message.answer(
        f"üçÇ –í–µ—Ç–µ—Ä —É–Ω–æ—Å–∏—Ç –≤–∞—à –≤—ã–±–æ—Ä ¬´{message.text}¬ª –≤ —Å–∞–¥ –ø–æ–∑–Ω–∞–Ω–∏—è... –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ —á—É–¥—É —á–∏—Å–µ–ª.",
        reply_markup = ReplyKeyboardRemove()
    )
    await state.clear()
    match (message.text):
        case "–®–∫–æ–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞":
            await school_program(message)
        case "–§–æ—Ä–º—É–ª—ã":
            await message.answer(
                "üå∏ –ö–∞–∫–æ–π –ø—É—Ç—å –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ –≤–∞–º –æ—Ç–∫—Ä—ã—Ç—å —Å–µ–≥–æ–¥–Ω—è?",
                reply_markup = InlineKeyboardMarkup(inline_keyboard = await get_kb_10())
            )
        case "–ü—Ä–æ—á–µ–µ":
            await message.answer(
                "üéê –†–∞–∑–¥–µ–ª –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–∫—Ä—ã—Ç –±—É–º–∞–∂–Ω—ã–º —ç–∫—Ä–∞–Ω–æ–º. –ú–∞—Å—Ç–µ—Ä–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º...",
                reply_markup = InlineKeyboardMarkup(inline_keyboard = [[InlineKeyboardButton(text = "–ú–µ–Ω—é", callback_data = "main_menu")]])
            )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —à–∫–æ–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
async def school_program(message: types.Message):
    await message.answer(
        text="üèØ <b>Ê≠¶ÈÅì„ÅÆÈÅì„ÇíÈÅ∏„Åπ</b> (–í—ã–±–µ—Ä–∏ –ø—É—Ç—å –≤–æ–∏–Ω–∞ –∑–Ω–∞–Ω–∏–π)\n\n"
             
             "‚ñ´Ô∏è <b>5-7 –∫–ª–∞—Å—Å—ã</b> <i>‚Ä¢ ÂºüÂ≠ê („Åß„Åó ‚Äî —É—á–µ–Ω–∏–∫)</i> üå±\n"
             "   –ò–∑—É—á–∞–µ–º –∏–µ—Ä–æ–≥–ª–∏—Ñ—ã —á–∏—Å–µ–ª –∏ —Å—á—ë—Ç –Ω–∞ –∞–±–∞–∫–µ, –∫–∞–∫ —é–Ω—ã–µ —Å–∞–º—É—Ä–∞–∏\n\n"
             
             "‚ñ´Ô∏è <b>8-10 –∫–ª–∞—Å—Å—ã</b> <i>‚Ä¢ Ë¶ãÁøí„ÅÑ („Åø„Å™„Çâ„ÅÑ ‚Äî –ø–æ–¥–º–∞—Å—Ç–µ—Ä—å–µ)</i> ‚öîÔ∏è\n"
             "   –û—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É–¥–∞—Ä—ã –∞–ª–≥–µ–±—Ä—ã –∏ –ø–∞—Ä–∏—Ä—É–µ–º –∞—Ç–∞–∫–∏ –≥–µ–æ–º–µ—Ç—Ä–∏–∏\n\n"
             
             "‚ñ´Ô∏è <b>11 –∫–ª–∞—Å—Å</b> <i>‚Ä¢ Ê≠¶Â£´ („Å∂„Åó ‚Äî –≤–æ–∏–Ω)</i> üé≠\n"
             "   –°—Ä–∞–∂–∞–µ–º—Å—è —Å –¥–µ–º–æ–Ω–∞–º–∏ —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏–∏ –∏ –ª–æ–≥–∞—Ä–∏—Ñ–º–æ–≤\n\n"
             
             "‚ñ´Ô∏è <b>–û–ì–≠ / –ï–ì–≠</b> <i>‚Ä¢ Ë©¶Á∑¥ („Åó„Çå„Çì ‚Äî –∏—Å–ø—ã—Ç–∞–Ω–∏–µ)</i> üèÆ\n"
             "   –ü–æ—Å–ª–µ–¥–Ω–∏–π –±–æ–π –ø–µ—Ä–µ–¥ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ–º –≤ –∫–ª–∞–Ω –º—É–¥—Ä–µ—Ü–æ–≤\n\n"
             
             "<i>¬´‰∏ÉËª¢„Å≥ÂÖ´Ëµ∑„Åç¬ª</i> ‚Äî –ø–∞–¥–∞–π —Å–µ–º—å —Ä–∞–∑, –ø–æ–¥–Ω–∏–º–∞–π—Å—è –≤–æ—Å–µ–º—å!\n"
             "<b>È†ëÂºµ„Å£„Å¶!</b> üéã",
             
        parse_mode="HTML",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=await get_kb_0()),
    )

@router.callback_query(F.data.in_(["formulas_pl", "formulas_st"]))
async def formulas(callback: types.CallbackQuery):
    match(callback.data):
        case "formulas_pl":
            await callback.message.edit_text(
                f"üå∏ <b>–í—ã–±–µ—Ä–∏—Ç–µ –ø—É—Ç—å —Å—Ä–µ–¥–∏ —Ü–≤–µ—Ç—É—â–∏—Ö —Ñ–∏–≥—É—Ä:</b>\n\n"
                f"{'\n'.join(PL_FIGURES)}",
                parse_mode = "HTML",
                reply_markup = InlineKeyboardMarkup(inline_keyboard = await get_kb_100())
            )
            await callback.answer()
        case "formulas_st":
            await callback.message.edit_text(
                f"üå∏ <b>–í—ã–±–µ—Ä–∏—Ç–µ –ø—É—Ç—å —Å—Ä–µ–¥–∏ —Ü–≤–µ—Ç—É—â–∏—Ö —Ñ–∏–≥—É—Ä:</b>\n\n"
                f"{'\n'.join(ST_FIGURES)}",
                parse_mode = "HTML",
                reply_markup = InlineKeyboardMarkup(inline_keyboard = await get_kb_101())
            )
            await callback.answer()

@router.callback_query(F.data == "formulas_back")
async def back_to_formulas_menu(callback: types.CallbackQuery):
    await callback.message.edit_text(
        "üå∏ –ö–∞–∫–æ–π –ø—É—Ç—å –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ –≤–∞–º –æ—Ç–∫—Ä—ã—Ç—å —Å–µ–≥–æ–¥–Ω—è?",
        reply_markup = InlineKeyboardMarkup(inline_keyboard = await get_kb_10())
    )
    await callback.answer()